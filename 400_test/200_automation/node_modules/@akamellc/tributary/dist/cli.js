#!/usr/bin/env node
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const dotenv_1 = __importDefault(require("dotenv"));
const cli_1 = require("./presentation/cli");
const Logger_1 = require("./infrastructure/logging/Logger");
const errors_1 = require("./domain/errors");
dotenv_1.default.config();
const logger = (0, Logger_1.createLogger)('CLI');
async function main() {
    try {
        const cli = new cli_1.TributaryCLI();
        await cli.run(process.argv);
    }
    catch (error) {
        if (error instanceof errors_1.TributaryError) {
            logger.error('CLI execution failed', error);
            process.exit(error.code);
        }
        else {
            logger.error('CLI execution failed', error);
            console.error('❌ An unexpected error occurred:', error.message);
            process.exit(errors_1.ErrorCodes.GENERAL_ERROR);
        }
    }
}
process.on('uncaughtException', (error) => {
    logger.error('Uncaught exception', error);
    console.error('❌ Uncaught exception:', error.message);
    process.exit(errors_1.ErrorCodes.GENERAL_ERROR);
});
process.on('unhandledRejection', (reason, _promise) => {
    const error = reason instanceof Error ? reason : new Error(String(reason));
    logger.error('Unhandled rejection', error);
    console.error('❌ Unhandled rejection:', error.message);
    process.exit(errors_1.ErrorCodes.GENERAL_ERROR);
});
process.on('SIGINT', () => {
    logger.info('Received SIGINT, shutting down gracefully');
    process.exit(errors_1.ErrorCodes.SUCCESS);
});
process.on('SIGTERM', () => {
    logger.info('Received SIGTERM, shutting down gracefully');
    process.exit(errors_1.ErrorCodes.SUCCESS);
});
main();
//# sourceMappingURL=cli.js.map