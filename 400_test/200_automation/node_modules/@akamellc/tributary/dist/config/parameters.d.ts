export interface TributaryParameters {
    network: {
        defaultNetwork: 'devnet' | 'testnet' | 'mainnet-beta';
        timeout: number;
        maxRetries: number;
        retryDelay: number;
        confirmationTimeout: number;
        commitment: 'processed' | 'confirmed' | 'finalized';
    };
    rpc: {
        endpoints: {
            devnet: string;
            testnet: string;
            'mainnet-beta': string;
        };
        fallbackEndpoints: {
            devnet: string[];
            testnet: string[];
            'mainnet-beta': string[];
        };
    };
    distribution: {
        defaultBatchSize: number;
        maxBatchSize: number;
        batchDelayMs: number;
        estimatedGasPerTransaction: number;
        estimatedTimePerBatchSeconds: number;
        riskThresholds: {
            largeAmountThreshold: number;
            largeRecipientCountThreshold: number;
            smallAmountThreshold: number;
        };
    };
    token: {
        defaultDecimals: number;
        fallbackDecimals: number;
        minimumBalance: number;
    };
    cache: {
        defaultTtlSeconds: number;
        walletCacheTtlSeconds: number;
        configCacheTtlSeconds: number;
    };
    logging: {
        defaultLevel: 'error' | 'warn' | 'info' | 'debug';
        defaultDir: string;
        enableConsole: boolean;
        enableFile: boolean;
        maxFiles: number;
        maxFileSize: string;
    };
    security: {
        defaultKeyEncryption: boolean;
        defaultBackupEnabled: boolean;
        defaultAuditLog: boolean;
    };
    export: {
        defaultFormat: 'json' | 'csv';
        fileNamePattern: string;
    };
    validation: {
        maxRecipientsPerDistribution: number;
        minBalanceForDistribution: number;
        walletValidationTimeout: number;
    };
}
export declare const DEFAULT_PARAMETERS: TributaryParameters;
export declare function loadParameters(): TributaryParameters;
export declare function getParameters(): TributaryParameters;
export declare function resetParameters(): void;
export declare function setParameters(customParams: Partial<TributaryParameters>): void;
//# sourceMappingURL=parameters.d.ts.map