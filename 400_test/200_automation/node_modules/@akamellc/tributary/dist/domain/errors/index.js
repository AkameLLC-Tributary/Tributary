"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ErrorCodes = exports.TimeoutError = exports.ResourceError = exports.DataIntegrityError = exports.AuthenticationError = exports.ConfigurationError = exports.ValidationError = exports.NetworkError = exports.TributaryError = void 0;
class TributaryError extends Error {
    code;
    details;
    constructor(message, code = 1, details) {
        super(message);
        this.code = code;
        this.details = details;
        this.name = 'TributaryError';
    }
}
exports.TributaryError = TributaryError;
class NetworkError extends TributaryError {
    constructor(message, details) {
        super(message, 4, details);
        this.name = 'NetworkError';
    }
}
exports.NetworkError = NetworkError;
class ValidationError extends TributaryError {
    constructor(message, details) {
        super(message, 2, details);
        this.name = 'ValidationError';
    }
}
exports.ValidationError = ValidationError;
class ConfigurationError extends TributaryError {
    constructor(message, details) {
        super(message, 3, details);
        this.name = 'ConfigurationError';
    }
}
exports.ConfigurationError = ConfigurationError;
class AuthenticationError extends TributaryError {
    constructor(message, details) {
        super(message, 5, details);
        this.name = 'AuthenticationError';
    }
}
exports.AuthenticationError = AuthenticationError;
class DataIntegrityError extends TributaryError {
    constructor(message, details) {
        super(message, 6, details);
        this.name = 'DataIntegrityError';
    }
}
exports.DataIntegrityError = DataIntegrityError;
class ResourceError extends TributaryError {
    constructor(message, details) {
        super(message, 7, details);
        this.name = 'ResourceError';
    }
}
exports.ResourceError = ResourceError;
class TimeoutError extends TributaryError {
    constructor(message, details) {
        super(message, 8, details);
        this.name = 'TimeoutError';
    }
}
exports.TimeoutError = TimeoutError;
exports.ErrorCodes = {
    SUCCESS: 0,
    GENERAL_ERROR: 1,
    VALIDATION_ERROR: 2,
    CONFIGURATION_ERROR: 3,
    NETWORK_ERROR: 4,
    AUTHENTICATION_ERROR: 5,
    DATA_INTEGRITY_ERROR: 6,
    RESOURCE_ERROR: 7,
    TIMEOUT_ERROR: 8
};
//# sourceMappingURL=index.js.map