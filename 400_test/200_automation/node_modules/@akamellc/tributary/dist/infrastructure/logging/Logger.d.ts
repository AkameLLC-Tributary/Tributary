import { LogLevel } from '../../domain/models';
export interface LoggerOptions {
    level?: LogLevel;
    logDir?: string;
    enableConsole?: boolean;
    enableFile?: boolean;
    maxFiles?: number;
    maxSize?: string;
}
export declare class Logger {
    private logger;
    private readonly component;
    constructor(component: string, options?: LoggerOptions);
    private createLogger;
    private parseSize;
    debug(message: string, meta?: Record<string, unknown>): void;
    info(message: string, meta?: Record<string, unknown>): void;
    warn(message: string, meta?: Record<string, unknown>): void;
    error(message: string, error?: Error | Record<string, unknown>): void;
    logOperation<T>(operation: string, fn: () => Promise<T>, meta?: Record<string, unknown>): Promise<T>;
    private withPerformanceTracking;
    private log;
    createChildLogger(childComponent: string): Logger;
    private hasConsoleTransport;
    private hasFileTransport;
    setLevel(level: LogLevel): void;
    getLevel(): string;
    close(): void;
}
export declare const createLogger: (component: string, options?: LoggerOptions) => Logger;
//# sourceMappingURL=Logger.d.ts.map