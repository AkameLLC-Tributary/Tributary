export interface FileStorageOptions {
    baseDir?: string;
    createDirs?: boolean;
}
export declare class FileStorage {
    private readonly baseDir;
    private readonly createDirs;
    constructor(options?: FileStorageOptions);
    writeJson<T>(filePath: string, data: T): Promise<void>;
    writeText(filePath: string, content: string): Promise<void>;
    readJson<T>(filePath: string): Promise<T>;
    exists(filePath: string): Promise<boolean>;
    delete(filePath: string): Promise<void>;
    list(dirPath?: string): Promise<string[]>;
    writeCache<T>(key: string, value: T, ttlSeconds: number): Promise<void>;
    readCache<T>(key: string): Promise<T | null>;
    clearCache(): Promise<void>;
    appendLog(logFile: string, entry: string): Promise<void>;
    ensureDirectoryExists(dirPath: string): Promise<void>;
    private sanitizeKey;
    getFullPath(filePath: string): string;
}
//# sourceMappingURL=FileStorage.d.ts.map